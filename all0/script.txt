&times;          X
\u00D7           х
&#9776;       \2630          меню

'\002B';                       ++++++
"\2212";                        --------
"\2022";                       коло
"\2610";                       квадрат
"\2611";                       галочка  
&#10004;      \2714            галочка жирна
&#10003;      \2713            галочка

"\25B6";                                     трикутник для спадного меню
&#9660;       \25b                   трикутник вниз
&#9650;       \25b2                  трикутник вверх

…                      ...

<i class="fa fa-caret-down"></i>               трикутник для спадного иеню
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<i class="fa fa-bars"></i>              меню
&laquo;                            <<
&raquo;                                 >>
&#10094;       \276e                       <
&#10095;       \276f                               >
"/\00a0";                            /    
\00bb                            btn    >>
&laquo;                        <<    btn previous
&raquo;                          >>   btn next
&#8249;                         <
&#8250;                           >
<span class="fa fa-star checked"></span>              зірка рейтенгу





onclick="this.parentElement.style.display='none'"             



    onclick='myff(this)'    додає/віднімає новий клас до ел. "Х
"
function myff(x) {  
x.classList.toggle('active');     
}

                onclick='myff(event)'    при натисканні додає клас "active"
event.currentTarget.className += "active";                      
Властивість currentTarget завжди посилається на елемент, слухач події якого ініціював подію



        активний клас має на завжди цей колір і другий при наведені 
.active, .accordion:hover {
  background-color: #ccc; 
}


    var el = document.getElementsByClassName('a');
    for (i=0;i<el.length;i++) {
      el[i].style.display='none';
    }
    var aa = document.getElementsByClassName('aa');
    for (i=0;i<aa.length;i++) {
      aa[i].classList.remove('active');
    }

var el = x.nextElementSibling;                наступний елемент після е. "Х"



transition: max-height 0.2s ease-out;



.accordion:after {
  content: '\002B';                       ++++++
  color: #777;
  font-weight: bold;
  float: right;
  margin-left: 5px;
}

.active:after {
  content: "\2212";                        --------
}



.clearfix::after {
  content: "";
  clear: both;
  display: table;
}

.clearfix {
  overflow: auto;                        якщо елемент містить більший за себе елемент і він не влазиться
}

overflow: hidden;             може замінити .clearfix 

white-space: nowrap;                    коли є два ел. то вони не будуть зповзати все буде в одній лінії




.center {
  display: flex;
  justify-content: center;
  align-items: center;                          вирівнує по вертикалі
  height: 200px;
  border: 3px solid green; 
}
/////////////
  line-height: 200px;
  height: 200px;
  border: 3px solid green;
  text-align: center;
.center p {
  line-height: 1.5;
  display: inline-block;
  vertical-align: middle;
}





@media screen and (max-width: 770px) {







                                                 по центру
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);




.......при прокрутці меню висувається
window.onscroll = function() {scrollFunction()};
function scrollFunction() {
  if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
    document.getElementById("navbar").style.top = "0";
  } else {
    document.getElementById("navbar").style.top = "-50px";
  }
}
............

if (d0.className  === 'asdd') {


d0.className +=' dkim2';
    
} else {
  
d0.className ='asdd';

    
}
//////////

for (i = 0; i < acc.length; i++) {
  acc[i].addEventListener("click", function() {
    this.classList.toggle("active");
    var panel = this.nextElementSibling;
    if (panel.style.maxHeight) {
//////////




  <a href="#" class="facebook"><i class="fa fa-facebook"></i></a> 
  <a href="#" class="twitter"><i class="fa fa-twitter"></i></a> 
  <a href="#" class="google"><i class="fa fa-google"></i></a> 
  <a href="#" class="linkedin"><i class="fa fa-linkedin"></i></a>
  <a href="#" class="youtube"><i class="fa fa-youtube"></i></a> 
////


user-select: none;    не дозволяє виділяти елемент






dots[i].className.replace(" active", "");




 outline: none;                                при фокусі у інпутів текстових не появляється рамка


resize: vertical;                               можна змінювати розмір елемента по вертикалі


checked='checked'

required                                 обовязково має бути заповнене


  display: flex;
  flex-flow: row wrap;
  align-items: center;
  vertical-align: middle;
    flex-direction: column;
    align-items: stretch;




<input type="text" onfocus="this.value=''" value="Blabla">              при натисканні поле очишчається


border-spacing: 0;              в таблиці забирає  відступи між стовпцями




var x = document.getElementById("myBtn").getAttribute("onclick");             вказує значення атребута



/* додає значок галочкт до списку при натисканні */
ul li.checked::before {
  content: '';
  position: absolute;
  border-color: #fff;
  border-style: solid;
  border-width: 0 2px 2px 0;
  top: 10px;
  left: 16px;
  transform: rotate(45deg);
  height: 15px;
  width: 7px;
}






                       для ствлрення нових елементів
  var h = document.createElement("H1");
  var t = document.createTextNode("Hello World");
  h.appendChild(t);
  document.body.appendChild(h);







var modal = document.getElementById('id01');

window.onclick = function(event) {
    if (event.target == modal) {
        modal.style.display = "none";
    }
}





for (i = 0; i < close.length; i++) {
  close[i].onclick = function(){
    var div = this.parentElement;
    div.style.opacity = "0";
    setTimeout(function(){ div.style.display = "none"; }, 600);          після опаціту буде дісплей ноне
  }
}







.image {                                                   для фонового зображення
  background-image: url("photographer.jpg");
  height: 100%; 
  background-position: center;
  background-attachment: fixed;                  для того щоб зображення залишалося на місці        прокрутка паралаксу
  background-repeat: no-repeat;
  background-size: cover;
  position: relative;
}
  






  mix-blend-mode: screen;                   для чорного         TEXT для прозорого тексту                  TEXT
  mix-blend-mode: multiply;                         для білого





..............................................flex
display: flex;
  

flex-direction: column;
flex-direction: row;

flex-wrap: wrap;
flex-wrap: nowrap;
                    flex-flow: row wrap;
justify-content: center;
justify-content: flex-start;
justify-content: space-around;

align-items: center;
align-items: flex-end;
align-items: stretch;                    розтягує
align-items: baseline;        вирівнює якщо різний розмір шрифтуб елементи вирівнюються за текстовою базовою лінією

align-content: space-between;
align-content: space-around;    Значення навколо простору відображає гнучкі лінії з пробілом до, між та після них:

        

tyle="order: 2"           можна задавати порядок гнучких елементів

style="flex-grow: 8"     елемент ростиме у вісім разів швидше, ніж інші елементи 
style="flex-shrink: 0"     Не дозволяйте гнучкому елементу скорочуватися настільки ж, як і інші гнучкі елементи:
style="flex-basis: 200px"    початкова довжина елемента згинання на 200 пікселів

style="flex: 0 0 200px"      елемент flex не піддається вирощуванню (0), не зменшується (0), а початкова довжина 200 пікселів

style="align-self: center"    задає вирівнювання для обраного елемента всередині гнучкого контейнера


/////////////////////////////////////////////////////



                                                 для активного класу
var header = document.getElementById("myDIV");
var btns = header.getElementsByClassName("btn");
for (var i = 0; i < btns.length; i++) {
  btns[i].addEventListener("click", function() {
  var current = document.getElementsByClassName("active");
  if (current.length > 0) { 
    current[0].className = current[0].className.replace(" active", "");
  }
  this.className += " active";
  });
}







                             щоб зробити текст червоним 
::placeholder {
  color: red;
  opacity: 1; /* Firefox */
}


                          поміняти колір при виділенні тексту
::selection {
  color: red;
  background: yellow;
}









///////////////          /                    accordion  + i -

.active, .header:hover {
  
  background-color: blue;

}

.header::after {
  
  content: '\002B';
  
  float: right;
  
  margin-left: 5px;
  
  font-weight: bold;

}

.active:after {
  
  content: "\2212";

}
////////////






                                   якщо зроблений клік по елементу то закриваємо
window.onclick = function(event) {
  if (event.target == x) {
    x.style.display = 'none';
  }
}






// Close the dropdown if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {
    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
}










                                                Search       filter
function myFunction() {
    var input, filter, ul, li, a, i, txtValue;
    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    ul = document.getElementById("myUL");
    li = ul.getElementsByTagName("li");
    for (i = 0; i < li.length; i++) {
        a = li[i].getElementsByTagName("a")[0];
        txtValue = a.textContent || a.innerText;
        if (txtValue.toUpperCase().indexOf(filter) > -1) {
            li[i].style.display = "";
        } else {
            li[i].style.display = "none";
        }
    }
}











                                                     16:9
   position: relative;
   width: 100%;
   padding-top: 56.25%; /* 16:9 Aspect Ratio */








onclick="One(); Two(); Three()"










.................

                                               при загрузці сторінки 3с крутиться коло
<body onload="myFunction()" style="margin:0;">

<div id="loader"></div>

<div style="display:none;" id="myDiv" class="animate-bottom">
  <h2>Tada!</h2>
  <p>Some text in my newly loaded page..</p>
</div>

<script>
var myVar;

function myFunction() {
  myVar = setTimeout(showPage, 3000);
}

function showPage() {
  document.getElementById("loader").style.display = "none";
  document.getElementById("myDiv").style.display = "block";
}
</script>
...................................
                                         загрузка по довжині
var i = 0;
function move() {
  if (i == 0) {
    i = 1;
    var elem = document.getElementById("myBar");
    var width = 1;
    var id = setInterval(frame, 10);
    function frame() {
      if (width >= 100) {
        clearInterval(id);
        i = 0;
      } else {
        width++;
        elem.style.width = width + "%";
      }
    }
  }
}














transform: rotate(-45deg) translate(-9px, 6px);                       для іконки мену щоб згиналися лінії






               для того щоб поміняти style input rang
................

.r {
    
  -webkit-appearance: none;
  
  width: 80%;
  
  margin: 33px;
  
  height: 20px;
  
  background: #d3d3d3;

  outline: none;

  opacity: 0.7;

  transition: opacity .2s;

}

.r::-moz-range-thumb {
  
  width: 25px;
  
  height: 25px;
  
  background: #4CAF50;
  
  cursor: pointer;

}

.r::-webkit-slider-thumb {
  
  -webkit-appearance: none;
  
  appearance: none;
  
  width: 25px;
  
  height: 25px;
  
  background: #4CAF50;
  
  cursor: pointer;

}
.............