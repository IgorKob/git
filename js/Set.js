// https://flaviocopes.com/javascript-data-structures-set/


// Set - це сукупність об'єктів або примітивних типів (рядків, чисел або булевих значень), 
// і ви можете сприймати його як Карту, де значення використовуються як ключі карти, 
// при цьому значення карти завжди є булевим істинним.

// Ініціалізуйте набір
const s = new Set()

// Додавання предметів до набору
s.add('one')
s.add('two')
// У наборі зберігаються лише унікальні елементи, тому виклик s.add('one')кілька разів не додасть нових елементів.
// Не можна одночасно додавати до набору кілька елементів. Вам потрібно телефонувати add()кілька разів.

// Перевірте, чи є деталь у наборі
s.has('one') //true
s.has('three') //false

// Видаліть елемент із Set
s.delete('one')

// Визначте кількість предметів у наборі
s.size

// Видаліть усі елементи з набору
s.clear()

// Ітерація елементів у наборі
for (const k of s.keys()) {
  console.log(k)
}
for (const k of s.values()) {
  console.log(k)
}

// entries()Метод повертає ітератор, який ви можете використовувати , як це:
const i = s.entries()
console.log(i.next())
// виклик i.next()буде повертати кожен елемент в якості { value, done = false }
// об'єкта до кінців ітератора, в який момент done знаходиться true.

// Ви також можете використовувати метод forEach () на наборі:
s.forEach(v => console.log(v))
// або ви можете просто використовувати набір у циклі for..of:
for (const k of s) {
  console.log(k)
}

// Ви можете ініціалізувати Set з набором значень:
const s = new Set([1, 2, 3, 4])
// Перетворити на масив
// Перетворіть клавіші Set в масив
const a = [...s.keys()]
// or
const a = [...s.values()]